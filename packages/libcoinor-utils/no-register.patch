diff -u -r ../orig-src/CoinUtils/src/CoinOslC.h ./CoinUtils/src/CoinOslC.h
--- ../orig-src/CoinUtils/src/CoinOslC.h	2023-04-24 13:28:57.000000000 +0000
+++ ./CoinUtils/src/CoinOslC.h	2023-10-02 13:05:06.967278569 +0000
@@ -34,30 +34,30 @@
 extern "C" {
 #endif
 
-int c_ekkbtrn(register const EKKfactinfo *fact,
+int c_ekkbtrn(const EKKfactinfo *fact,
   double *dwork1,
   int *mpt, int first_nonzero);
-int c_ekkbtrn_ipivrw(register const EKKfactinfo *fact,
+int c_ekkbtrn_ipivrw(const EKKfactinfo *fact,
   double *dwork1,
   int *mpt, int ipivrw, int *spare);
 
-int c_ekketsj(register /*const*/ EKKfactinfo *fact,
+int c_ekketsj(/*const*/ EKKfactinfo *fact,
   double *dwork1,
   int *mpt2, double dalpha, int orig_nincol,
   int npivot, int *nuspikp,
   const int ipivrw, int *spare);
-int c_ekkftrn(register const EKKfactinfo *fact,
+int c_ekkftrn(const EKKfactinfo *fact,
   double *dwork1,
   double *dpermu, int *mpt, int numberNonZero);
 
-int c_ekkftrn_ft(register EKKfactinfo *fact,
+int c_ekkftrn_ft(EKKfactinfo *fact,
   double *dwork1, int *mpt, int *nincolp);
-void c_ekkftrn2(register EKKfactinfo *fact, double *dwork1,
+void c_ekkftrn2(EKKfactinfo *fact, double *dwork1,
   double *dpermu1, int *mpt1, int *nincolp,
   double *dwork1_ft, int *mpt_ft, int *nincolp_ft);
 
-int c_ekklfct(register EKKfactinfo *fact);
-int c_ekkslcf(register const EKKfactinfo *fact);
+int c_ekklfct(EKKfactinfo *fact);
+int c_ekkslcf(const EKKfactinfo *fact);
 inline void c_ekkscpy(int n, const int *marr1, int *marr2)
 {
   CoinMemcpyN(marr1, n, marr2);
diff -u -r ../orig-src/CoinUtils/src/CoinOslFactorization2.cpp ./CoinUtils/src/CoinOslFactorization2.cpp
--- ../orig-src/CoinUtils/src/CoinOslFactorization2.cpp	2023-04-24 13:28:57.000000000 +0000
+++ ./CoinUtils/src/CoinOslFactorization2.cpp	2023-10-02 13:03:37.519841028 +0000
@@ -21,9 +21,9 @@
 extern int ets_count;
 extern int ets_check;
 #endif
-#define COIN_REGISTER register
+#define COIN_REGISTER
 #define COIN_REGISTER2
-#define COIN_REGISTER3 register
+#define COIN_REGISTER3
 #ifdef COIN_USE_RESTRICT
 #define COIN_RESTRICT2 __restrict
 #else
