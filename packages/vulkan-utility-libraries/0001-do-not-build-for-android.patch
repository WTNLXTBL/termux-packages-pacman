--- a/src/layer/layer_settings_manager.cpp
+++ b/src/layer/layer_settings_manager.cpp
@@ -20,7 +20,7 @@
 #define GetCurrentDir getcwd
 #endif
 
-#ifdef __ANDROID__
+#if defined(__ANDROID__) && !defined(__TERMUX__)
 #include <sys/system_properties.h>
 #endif
 
@@ -32,7 +32,7 @@
 #include <array>
 #include <algorithm>
 
-#if defined(__ANDROID__)
+#if defined(__ANDROID__) && !defined(__TERMUX__)
 static std::string GetAndroidProperty(const char *name) {
     std::string output;
     const prop_info *pi = __system_property_find(name);
@@ -51,7 +51,7 @@
 #endif
 
 static std::string GetEnvironment(const char *variable) {
-#if defined(__ANDROID__)
+#if defined(__ANDROID__) && !defined(__TERMUX__)
     std::string result = GetAndroidProperty(variable);
     // Workaround for screenshot layer backward compatibility
     if (result.empty() && std::string(variable) == "debug.vulkan.screenshot.frames") {
@@ -192,7 +192,7 @@
     }
 #endif
 
-#ifdef __ANDROID__
+#if defined(__ANDROID__) && !defined(__TERMUX__)
     std::string env_path = GetEnvironment("debug.vulkan.khronos_profiles.settings_path");
 #else
     // Look for an environment variable override for the settings file location
--- a/src/layer/layer_settings_util.cpp
+++ b/src/layer/layer_settings_util.cpp
@@ -50,7 +50,7 @@
 std::string GetEnvSettingName(const char *layer_key, const char *setting_key, TrimMode trim_mode) {
     std::stringstream result;
 
-#if defined(__ANDROID__)
+#if defined(__ANDROID__) && !defined(__TERMUX__)
     switch (trim_mode) {
         default:
         case TRIM_NONE: {
